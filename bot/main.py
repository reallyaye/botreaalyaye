# bot/main.py

import os
import asyncio
from pathlib import Path
from dotenv import load_dotenv

from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –≤—Å–µ —Ä–æ—É—Ç–µ—Ä—ã –∏–∑ handlers
from bot.handlers.commands        import router as commands_router
from bot.handlers.navigation      import router as navigation_router
from bot.handlers.workouts        import router as workouts_router
from bot.handlers.progress        import router as progress_router
from bot.handlers.programs        import router as programs_router
from bot.handlers.custom_programs import router as custom_programs_router

# ================== –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ==================

BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(BASE_DIR / ".env")

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
ADMIN_ID  = int(os.getenv("ADMIN_ID", "0"))

if not BOT_TOKEN or not ADMIN_ID:
    raise RuntimeError("TELEGRAM_BOT_TOKEN –∏ ADMIN_ID –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ .env")

# ================== –°–æ–±—ã—Ç–∏—è —Å—Ç–∞—Ä—Ç–∞/–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ ==================

async def on_startup(bot: Bot):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –æ—á–∏—â–∞–µ–º –≤–µ–±—Ö—É–∫ (–¥–ª—è polling)
    from services.db import init_db
    await init_db()
    await bot.delete_webhook(drop_pending_updates=True)
    print("‚úÖ DB initialized, webhook cleared, bot is up")

async def on_shutdown(bot: Bot):
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é aiohttp
    await bot.session.close()
    print("üõë Bot stopped")

# ================== –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ==================

async def main():
    bot = Bot(token=BOT_TOKEN)
    # –í–ê–ñ–ù–û: –ø–µ—Ä–µ–¥–∞—ë–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è FSM!
    dp  = Dispatcher(storage=MemoryStorage())

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ —Ä–æ—É—Ç–µ—Ä—ã
    dp.include_router(commands_router)
    dp.include_router(navigation_router)
    dp.include_router(workouts_router)
    dp.include_router(progress_router)
    dp.include_router(programs_router)
    dp.include_router(custom_programs_router)

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å—Ç–∞—Ä—Ç–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    dp.startup.register(on_startup)
    dp.shutdown.register(on_shutdown)


    # –ó–∞–ø—É—Å–∫–∞–µ–º long-polling
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
