# bot/main.py

import os
import asyncio
from pathlib import Path
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage

from aiogram.types import (
    BotCommandScopeDefault,
    BotCommandScopeAllPrivateChats,
    BotCommandScopeAllGroupChats,
    BotCommandScopeAllChatAdministrators,
)
from bot.handlers import commands, workouts, progress, programs, navigation, custom_programs
from services.db import init_db

# –ó–∞–≥—Ä—É–∑–∫–∞ .env
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(dotenv_path=BASE_DIR / ".env", override=True)

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
ADMIN_ID  = int(os.getenv("ADMIN_ID", "0"))
if not BOT_TOKEN or not ADMIN_ID:
    raise RuntimeError("TELEGRAM_BOT_TOKEN –∏ ADMIN_ID –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ .env")

async def on_startup():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    await init_db()

    # –°–±—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥
    bot = Bot(token=BOT_TOKEN)
    await bot.delete_my_commands()
    await bot.set_my_commands([], scope=BotCommandScopeDefault())
    await bot.set_my_commands([], scope=BotCommandScopeAllPrivateChats())
    await bot.set_my_commands([], scope=BotCommandScopeAllGroupChats())
    await bot.set_my_commands([], scope=BotCommandScopeAllChatAdministrators())
    await bot.session.close()

async def main():
    bot = Bot(token=BOT_TOKEN)
    storage = MemoryStorage()
    dp  = Dispatcher(storage=storage)

    # –£–¥–∞–ª—è–µ–º webhook, —á—Ç–æ–±—ã –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å polling
    await bot.delete_webhook(drop_pending_updates=True)

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö—ç–Ω–¥–ª–µ—Ä—ã
    commands.register_handlers(dp)
    navigation.register_handlers(dp)
    workouts.register_handlers(dp)
    progress.register_handlers(dp)
    programs.register_handlers(dp)
    custom_programs.register_handlers(dp)

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º on_startup
    dp.startup.register(on_startup)
    dp.shutdown.register(lambda: print("üõë Bot stopped"))

    # –ó–∞–ø—É—Å–∫–∞–µ–º polling
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
