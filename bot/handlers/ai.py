# bot/handlers/ai.py
import os
import asyncio
import openai

from aiogram import Router
from aiogram.types import Message
from aiogram.filters.command import Command

router = Router()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
client = openai.OpenAI(
    api_key=os.getenv("SAMBANOVA_API_KEY"),       # ‚Üê –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –Ω–µ None
    base_url="https://api.sambanova.ai/v1",
)

@router.message(Command("ask"))
async def ask_handler(message: Message):
    await message.answer("üîç –Ø –≤–∞—Å —Å–ª—ã—à—É! –û–±—Ä–∞–±–æ—Ç–∫–∞ /ask...")

    # –î–µ–±–∞–≥: –ø–æ–∫–∞–∂–µ–º –∫–ª—é—á (–º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å –ø–æ—Å–ª–µ –æ—Ç–ª–∞–¥–∫–∏)
    api_key = os.getenv("SAMBANOVA_API_KEY")
    if not api_key:
        return await message.answer("‚ùóÔ∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è SAMBANOVA_API_KEY –Ω–µ –∑–∞–¥–∞–Ω–∞!")

    prompt = message.get_args().strip()
    if not prompt:
        return await message.answer("‚ùóÔ∏è –£–∫–∞–∂–∏—Ç–µ –≤–æ–ø—Ä–æ—Å —Ç–∞–∫: `/ask <–≤–∞—à –≤–æ–ø—Ä–æ—Å>`")

    await message.chat.post_action("typing")

    try:
        # –û–±—ë—Ä—Ç–∫–∞ –≤ to_thread, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å loop
        response = await asyncio.to_thread(
            lambda: client.chat.completions.create(
                model="DeepSeek-V3-0324",
                messages=[{"role":"system","content":"You are a helpful assistant"},{"role":"user","content":"Hello"}],
                temperature=0.1,
                top_p=0.1,
            )
        )
    except Exception as e:
        # –ï—Å–ª–∏ —É–ø–∞–ª–æ ‚Äî —Å–æ–æ–±—â–∏–º –æ–± —ç—Ç–æ–º
        return await message.answer(f"‚ùóÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API:\n`{e}`")

    # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø—Ä–∏—à—ë–ª, –Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è
    choice = None
    try:
        choice = response.choices[0].message.content
    except Exception as e:
        return await message.answer(f"‚ùóÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å –æ—Ç–≤–µ—Ç API:\n`{e}`")

    # –ù–∞–∫–æ–Ω–µ—Ü, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await message.answer(choice)
