# bot/handlers/custom_programs.py

from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters.state import StateFilter

from services.db import add_custom_program, get_custom_programs, delete_custom_program
from bot.keyboards import main_menu, cancel_keyboard, cancel_button, my_programs_menu

class CustomProgramForm(StatesGroup):
    input_program = State()

class CustomProgramDeleteForm(StatesGroup):
    choose_index = State()

async def show_my_programs(message: Message, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –≤–≤–æ–¥, –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º.
    """
    programs = await get_custom_programs(message.from_user.id)
    if programs:
        text = "üìö –í–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã:\n\n"
        for idx, (_id, prog, created) in enumerate(programs, 1):
            date = created.split(".")[0]
            text += f"{idx}. [{date}]\n{prog}\n\n"
        await message.answer(text)
        await message.answer("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=my_programs_menu)
        await state.clear()
    else:
        await message.answer(
            "–£ –≤–∞—Å –µ—â—ë –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º.\n"
            "–ü—Ä–∏—à–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:",
            reply_markup=cancel_keyboard
        )
        await state.set_state(CustomProgramForm.input_program)

async def input_program(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É."""
    if message.text == cancel_button.text:
        await state.clear()
        return await message.answer("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=main_menu)
    text = message.text.strip()
    await add_custom_program(message.from_user.id, text)
    await state.clear()
    await message.answer("‚úÖ –í–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.", reply_markup=main_menu)

async def start_delete_flow(message: Message, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–ª–æ–≥ —É–¥–∞–ª–µ–Ω–∏—è."""
    programs = await get_custom_programs(message.from_user.id)
    if not programs:
        await message.answer("‚ÑπÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.", reply_markup=main_menu)
        return
    text = "üìö –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n\n"
    for idx, (_id, prog, created) in enumerate(programs, 1):
        date = created.split(".")[0]
        text += f"{idx}. [{date}] {prog[:30]}...\n"
    await message.answer(text, reply_markup=cancel_keyboard)
    await state.set_state(CustomProgramDeleteForm.choose_index)

async def delete_chosen(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ –∏ —É–¥–∞–ª—è–µ–º."""
    if message.text == cancel_button.text:
        await state.clear()
        return await message.answer("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞.", reply_markup=main_menu)
    if not message.text.isdigit():
        return await message.answer("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ-–ø–æ–∑–∏—Ü–∏—é.", reply_markup=cancel_keyboard)
    idx = int(message.text) - 1
    programs = await get_custom_programs(message.from_user.id)
    if idx < 0 or idx >= len(programs):
        return await message.answer("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä.", reply_markup=cancel_keyboard)
    program_id = programs[idx][0]
    deleted = await delete_custom_program(message.from_user.id, program_id)
    await state.clear()
    if deleted:
        await message.answer("‚úÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞ —É–¥–∞–ª–µ–Ω–∞.", reply_markup=main_menu)
    else:
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å.", reply_markup=main_menu)

def register_handlers(dp):
    # –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–ª–∏ –≤–≤–æ–¥
    dp.message.register(show_my_programs, Command(commands=["my_programs"]))
    dp.message.register(show_my_programs, lambda m: m.text == "–ú–æ–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
    # –í–≤–æ–¥ –Ω–æ–≤–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
    dp.message.register(input_program, StateFilter(CustomProgramForm.input_program))
    # –ù–∞—á–∞–ª–æ —É–¥–∞–ª–µ–Ω–∏—è
    dp.message.register(start_delete_flow, lambda m: m.text == "–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É")
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–º–µ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    dp.message.register(delete_chosen, StateFilter(CustomProgramDeleteForm.choose_index))
