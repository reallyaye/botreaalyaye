# bot/handlers/custom_programs.py

from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters.command import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters.state import StateFilter

from bot.services.db import add_custom_program, get_custom_programs, delete_custom_program
from bot.keyboards import main_menu, cancel_keyboard, cancel_button, my_programs_menu

router = Router()


class CustomProgramForm(StatesGroup):
    input_program = State()


class CustomProgramDeleteForm(StatesGroup):
    choose_index = State()


@router.message(Command("my_programs"))
@router.message(F.text == "–ú–æ–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
async def show_my_programs(message: Message, state: FSMContext):
    programs = await get_custom_programs(message.from_user.id)
    if programs:
        text = "üìö –í–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã:\n\n"
        for idx, (_id, prog, created) in enumerate(programs, 1):
            date = created.split(".")[0]
            text += f"{idx}. [{date}]\n{prog}\n\n"
        await message.answer(text)
        await message.answer("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=my_programs_menu)
        await state.clear()
    else:
        await message.answer(
            "–£ –≤–∞—Å –µ—â—ë –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º.\n"
            "–ü—Ä–∏—à–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:",
            reply_markup=cancel_keyboard,
        )
        await state.set_state(CustomProgramForm.input_program)


@router.message(StateFilter(CustomProgramForm.input_program))
async def input_program(message: Message, state: FSMContext):
    if message.text == cancel_button.text:
        await state.clear()
        return await message.answer("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=main_menu)
    await add_custom_program(message.from_user.id, message.text.strip())
    await state.clear()
    await message.answer("‚úÖ –í–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.", reply_markup=main_menu)


@router.message(F.text == "–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É")
async def start_delete_flow(message: Message, state: FSMContext):
    programs = await get_custom_programs(message.from_user.id)
    if not programs:
        return await message.answer("‚ÑπÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.", reply_markup=main_menu)
    text = "üìö –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n\n"
    for idx, (_id, prog, created) in enumerate(programs, 1):
        date = created.split(".")[0]
        text += f"{idx}. {prog[:30]}...\n"
    await message.answer(text, reply_markup=cancel_keyboard)
    await state.set_state(CustomProgramDeleteForm.choose_index)


@router.message(StateFilter(CustomProgramDeleteForm.choose_index))
async def delete_chosen(message: Message, state: FSMContext):
    if message.text == cancel_button.text:
        await state.clear()
        return await message.answer("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=main_menu)
    if not message.text.isdigit():
        return await message.answer("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ-–ø–æ–∑–∏—Ü–∏—é.", reply_markup=cancel_keyboard)
    idx = int(message.text) - 1
    programs = await get_custom_programs(message.from_user.id)
    if idx < 0 or idx >= len(programs):
        return await message.answer("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä.", reply_markup=cancel_keyboard)
    deleted = await delete_custom_program(message.from_user.id, programs[idx][0])
    await state.clear()
    await message.answer(
        "‚úÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞ —É–¥–∞–ª–µ–Ω–∞." if deleted else "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å.",
        reply_markup=main_menu
    )
